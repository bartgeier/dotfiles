#!/usr/bin/env python3

# Use  https://www.regextester.com/
# for regex experiments
# install it with => sudo cp xmod /usr/local/bin/xmod

import sys
import os
import re 


def nnn(group, default):
        r = 0
        w = 0
        x = 0
        for chr in group:
                if 'r' in group: r = 4
                if 'w' in group: w = 2
                if 'x' in group: x = 1
                if '=' in group: return default
        return str(r + w + x)

def string(num):
        s = ''
        for chr in num:
                n = int(chr, base=10)
                if n & 4: s += 'r'
                else: s += '-'
                if n & 2: s += 'w'
                else: s += '-'
                if n & 1: s += 'x'
                else: s += '-'
        return s

def terminal_output_help():
    print(\
'''😵 I think you need a little bit help:
    xmod is just another chmod command 
    with a different syntax for the permission input.

Examples:
    xmod ,rwx,rwx,rwx, testfile => the same as chmod 777 testfile
    xmod ,,rwx,, testfile       => the same as chmod 070 testfile
    xmod rwx,rwx,rwx testfile   => the same as chmod 777 testfile
    xmod rw,rw,r testfile       => the same as chmod 664 testfile

The equal = character:
    The "user", "group" and "other" don't change if an "=" is used.
    Asume our testfile has a permission of 777 
    xmod ,=,=,=, testfile       => testfile permission 777 has not changed 
    xmod =,=,rx testfile        => testfile permission is now 775 ''')

def terminal_output(file, actual, new):
        print(file)
        if actual != new:
            print(f'🙂 Permission changed from {actual} {string(actual)} to {new} {string(new)}')
        else:
            print(f"☹️  Permission is still {new} {string(new)}")

if len(sys.argv) < 3:
        print('Too few arguments!')
        print()
        terminal_output_help()
        quit()
elif len(sys.argv) > 3:
        print('Too many arguments!')
        print()
        terminal_output_help()
        quit()
wanted_permission = sys.argv[1]
file = sys.argv[2]
if not os.path.exists(file):
        print(file + " => 😭 File doesn't exist!")
        print()
        terminal_output_help()
        quit()
old_permission = oct(os.stat(file).st_mode)[-3:]
new_permission = ''
m = re.search('^,{0,1}([=rwx]{0,3}),{0,1}([=rwx]{0,3}),{0,1}([=rwx]{0,3}),{0,1}$', wanted_permission)
if m != None:
    for group, i in zip(m.groups(), range(3)):
        new_permission += nnn(group, old_permission[i])
        os.chmod(file, int(new_permission, base=8))
        terminal_output(file, old_permission, new_permission)
else:
    print('No regex matched!')
    print()
    terminal_output_help()

